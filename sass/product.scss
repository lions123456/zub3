.product {
    background-color: #F7F7FA;
    // каждая карточка мусса имеет такой цвет
    padding: 25px;
    // в карточке контент смещен на 25px с каждой стороны
    box-shadow: 2px 2px 10px 0 #5150761A;
    // на каждой карточке мусса добавили рамку(крокмку/обводку) в виде тени по сторонам
    width: 100%;
    // каждая карточка мусса имеет 100% своей ширины (имеет 100% своей ширины 340px)

    display: flex;
    flex-direction: column;
    // и когда у нас display: flex то у нас отступы отключают схлопывание
    // поэтому через F12 легче посмотреть где убрать лишние отступы (в тех тегах в которых мы уверены, что контент не изменят)

    &__img {
    // так как картинка - строчный элемент нужно установить display:block на картинку
        display: block;
        // отображение элемента в блоке-элемента (строчный или блочный) так как img - строчно-блочный, то мы установим полностью блочный тип, чтобы не прилип абзац к картинке
    }
    // в селекторе блок-элемента .product установим свойство для элемента __img
    

    &__tag {
    // в Figme дизайн указан, значит нужно его установить его по дизайну .
    
        font-weight: 400;
        // установим жирность(да, без px)
        font-size: 14px;
        // установить высоту букв
        line-height: 24px;
        //  интерлиньяж (простым словами блок, в ккотором находится текст увеличивается в размерах) или интервал между строчками текста
        color: #a5a3b9;
        // в figma цвет такой
        text-transform: uppercase;
        // стиль капса
        // если видим в Fligma что текст будто капсом написан, это значит не капсом а стиль такой uppercase
        margin-top: 30px;
        // в fligma сетке отступ от картинки 30px
        margin-bottom: 5px;
        // в fligma сетке отступ до абзаца (h2) 5px
        // у margin кроме выпадение есть еще схлопывание.
        // когда есть два margina: например margin(botom) - расстояние от этого элемента до следующего и margin расстояние от следующего до этого (у следующего margin-top)
        // это помогает, если один с контентом будет удален, то на смену ему вступит margin-top следующего элемента
    }

    &__title {
    // своства загаловка (h2)
        display: block;
        // сделал "Увлажняющий мус" блочным чтобы он занимал всю ширину
        font-weight: 700;
        // жирность заголовка
        font-size: 20px;
        // размер текста
        line-height: 27px;
        // интерльяж
        color: #515076;
        // цвет абзаца
        // margin-top: 5px;
        // так как у нас lorem50 многострочный и display: flex у .catalog то схлопывания не будут, поэтому отступы отменли
        // сетка fligma расстояние между объектами этим и сверху
        // (у этого margin-top) про схлопывание
        // margin-bottom: 5px;
        // сетка fligma расстояние между объектами этим и следующим
        // так как у нас lorem50 многострочный и display: flex у .catalog то схлопывания не будут, поэтому отступы отменли
        margin: 0
        // поэтому margin 0 так как у нас lorem50 многострочный и display: flex у .catalog то схлопывания не будут. обнклили чтобы перекрыть em'ы и чтобы схлопывания не суммировались
        
    }

    &__description {
    // создам стиль для div "глубоко увлажняет"
        
        // margin-top: 5px;
        // так как у нас lorem50 многострочный и display: flex у .catalog то схлопывания не будут, поэтому отступы отменли
        // создам отступ, чтобы создать схлопывание <h2> и div
        // margin-bottom: 15px;
        // сделем родителю p (div'y) отступ чтобы если создавать в контейнер div еще теги или будут удалять тег p, то отступ остался перед следующим элементом
        // так как у нас lorem50 многострочный и display: flex у .catalog то схлопывания не будут, поэтому отступы отменли
        color: #515076;
        // цвет текста у <p> в БЭМ элементе description
        font-size: 13px;
        // его шрифт
        line-height: 18px;
        // его  интерельяж
        font-weight: 400;
        // ширина букв по figma чертежам

        p {
            margin-top: 5px;
            // создам отступ, которыйсхлопнется с div (взаимозаменяемы)
            margin-bottom: 15px;
            // создам отступ, который схлопнется с div (взимозаменяемы)
        }
    }

    &__mini-title {
        font-weight: 400;
        // данные из figma да без px

        font-size: 13px;
        // размер шрифта

        line-height: 18px;
        // интерельяж

        color: #515076;
        // цвет текста

        display: block;
        // так как span - строчны, то сделаем его блочным

        // margin-top: 15px;
        // аналагично, какспредыдущими как с p, title (и вообще это по сетке figma)
        // так как у нас lorem50 многострочный и display: flex у .catalog то схлопывания не будут, поэтому отступы отменли

        margin-bottom: 5px;
        // по сетке figma
    }

    &__compound {
        @include clear-list;
        // чтобыусписка сбросить стили. потому чтоизначально у браузеров заданыстили (стили агента пользователя)
        // у compound потому что это бэм блок ul (родитель li) и потому что изначально у браезра нумерация списка в виде кружков, а мы будем делать свои
        font-weight: 400;
        font-size: 13px;
        line-height: 18px;
        color: #515076;
        // margin-bottom: 25px;
        // так как у нас lorem50 многострочный и display: flex у .catalog то схлопывания не будут, поэтому отступы отменли
        // для схлопывание (вдруг price удалят/взаимозаменяемость)
        margin-bottom: 25px;
        // но мы его вернем, потому что с margin-bottom: auto -> price произошло схлопывание


        li {
            margin: 5px 0;
            // отступы сврху и снизу, а справа и слева 0 по сетке figma



            position: relative;
            // если <li> текст многострочным например Loren20 (длинное предложение)
            // потому что многострочный текст задевает нумерацию
            // position: relative это назначить тег родителем для следующих вложенных свойств в li
            // left: 0;
            // top: 6px;
            // left, top - расположение в position: relative
            padding-left: 15px;
            // не margin чтобы и нумерация и текст у нумерации вместе не уехали, а только текст повинулся (поэтому padding)
            // чтобы многострочный текст не задевал нумерацию нужно сделать отступ от нумерации
            // отступ от нумерации списка (ширина нумерации - 7px + 8px - отступ от нумерации (да, такаяформула)

            &:last-child {
                margin-bottom: 0;
            } 
            // убрал ТОЛЬКО у последней <li> оступ потому что схлопывания суммировались
            &:first-child {
                margin-top: 0;
            }
            // убрал отступ сверху у первого <li>


            &::before {
                content: '';
                // необходимое свойство с ::before

                display: inline-block;
                // знак-нумерация будет строчным блоком значит на уровне с <li>
                vertical-align: middle;
                // вертикальное выравнивание (сдвигает верх, вниз, выравнивает по центру)
                width: 7px;
                // ширина
                height: 7px;
                // высота
                border: 1px solid #515076;
                // рамка
                border-radius: 50%;
                // так как высота и ширина равны то можно указать 50% и превратить в кружок
                // если высота и ширина разные то гуглить 
                margin-right: 8px;
                // отступ вправо 

                position: absolute;
                // если в <li> текст был многострочным например Loren20 (длинное предложение)
                // А ЗНАЧИТ КАРТОЧКИ РАСТЯНУЛИСЬ. ИСПРАВЛЕНИЕ В catalog.scss -> flex
                // потому что многострочный текст задевает нумерацию
                // назначение свойство дочерним для родителя (position: relative)
                // padding-left: 15px;
                // чтобы многострочный текст не задевал нумерацию нужно сделать отступ от нумерации
                // отступ от нумерации списка (ширина нумерации - 7px + 8px - отступ от нумерации (да, такаяформула)
                left: 0;
                top: 6px;
                // left, top - расположение в position: relative


// align-items: flex-start;
// позициаонирование карточки во flex - растянуть? или толькорастянуть для одной многозначной (Loren20)
// она находится в catlog (ctrl + f)



                
            }
        }
    }

    &__price {
        display: flex;
        // без display: flex justify-content не работает
        // благодаря display: flex + margin в виде auto прижимает "Цену" вниз
        justify-content: space-between;
        // расположение и поведение объектов, крайние объекты прижиматся к боковым краям
        // margin-top: 25px;
        // отступ от предыдущего элемента <ul>
        // все равно будет схлопывание
        // не будет схлопывание, потому что Lorem 50
        margin-top:auto;
        // значит поставим auto

        align-items: center;
        // чтобы сумма подстроилась под слово цена, чтоб были на одном уровне

        b {
            color: #515076;
            // цвет шрифта
            font-weight: 700;
            // ширина букв
            font-size: 20px;
            // размер букв
            line-height: 24px;
            // интерельяж
        }
        
        span {
            font-weight: 400;
            // ширина букв
            color: #515076;
            // цвет шрифта
            font-size: 20px;
            // размер букв
            line-height: 24px;
            // интерельяж
        }
    }

}